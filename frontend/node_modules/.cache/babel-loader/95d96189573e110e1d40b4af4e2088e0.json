{"ast":null,"code":"import _slicedToArray from \"/Users/jhcohen/Desktop/technicianview/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jhcohen/Desktop/technicianview/frontend/src/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = 'pk.eyJ1IjoiY29oZW5qb3NoMTAiLCJhIjoiY2tvODM3cHViMWh5MDJ3bWxlODR5OHJwbyJ9.OsP4XQxhznEl3LkexbZyNg';\nvar TECHNICIANS_API = 'http://127.0.0.1:5000/api/v1/solar_farms/abc123/technicians';\n\nvar Map = function Map() {\n  _s();\n\n  var mapContainer = useRef();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      techList = _useState2[0],\n      setTechList = _useState2[1]; // Technician Information\n\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      techLng = _useState4[0],\n      setTechLng = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      techLat = _useState6[0],\n      setTechLat = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      techTitle = _useState8[0],\n      setTechTitle = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      techRot = _useState10[0],\n      setTechRot = _useState10[1];\n\n  var _useState11 = useState(\"#\" + Math.floor(Math.random() * 16777215).toString(16)),\n      _useState12 = _slicedToArray(_useState11, 2),\n      techColor = _useState12[0],\n      setTechColor = _useState12[1]; // Each tech's properties include a map from name -> full json, with a color\n  // added to properties list.\n  // Technician Fetching\n\n\n  var fetchTechnicianLocation = function fetchTechnicianLocation() {\n    return fetch(TECHNICIANS_API).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      var tech = json.features[0];\n      setTechLng(tech.geometry.coordinates[0]);\n      setTechLat(tech.geometry.coordinates[1]);\n      setTechTitle(tech.properties.name);\n      setTechRot(tech.properties.bearing);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  useEffect(function () {\n    fetchTechnicianLocation();\n    var map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [techLng, techLat],\n      zoom: 9\n    });\n    var marker1 = new mapboxgl.Marker({\n      color: techColor\n    }).setLngLat([techLng, techLat]).setPopup(new mapboxgl.Popup().setText(techTitle)).setRotation(techRot).addTo(map);\n    return function () {\n      return map.remove();\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Map, \"5bYf7Nh1RWIdTmXpMD7JOkF2JoU=\");\n\n_c = Map;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 17\n}, this), document.getElementById('app'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/jhcohen/Desktop/technicianview/frontend/src/index.js"],"names":["React","useRef","useEffect","useState","ReactDOM","mapboxgl","MapboxWorker","workerClass","accessToken","TECHNICIANS_API","Map","mapContainer","techList","setTechList","techLng","setTechLng","techLat","setTechLat","techTitle","setTechTitle","techRot","setTechRot","Math","floor","random","toString","techColor","setTechColor","fetchTechnicianLocation","fetch","then","response","json","tech","features","geometry","coordinates","properties","name","bearing","catch","error","console","map","container","current","style","center","zoom","marker1","Marker","color","setLngLat","setPopup","Popup","setText","setRotation","addTo","remove","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\n\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = 'pk.eyJ1IjoiY29oZW5qb3NoMTAiLCJhIjoiY2tvODM3cHViMWh5MDJ3bWxlODR5OHJwbyJ9.OsP4XQxhznEl3LkexbZyNg';\nconst TECHNICIANS_API = 'http://127.0.0.1:5000/api/v1/solar_farms/abc123/technicians';\n\n\nconst Map = () => {\n  const mapContainer = useRef();\n  const [techList, setTechList] = useState(null);\n\n  // Technician Information\n \n  const [techLng, setTechLng] = useState(0);\n  const [techLat, setTechLat] = useState(0);\n  const [techTitle, setTechTitle] = useState(\"\");\n  const [techRot, setTechRot] = useState(0);\n  const [techColor, setTechColor] = useState(\"#\" + Math.floor(Math.random()*16777215).toString(16));\n\n  // Each tech's properties include a map from name -> full json, with a color\n  // added to properties list.\n\n\n  // Technician Fetching\n  const fetchTechnicianLocation = () => {\n    return fetch(TECHNICIANS_API)\n      .then((response) => response.json())\n      .then((json) => {\n        const tech = json.features[0];\n        setTechLng(tech.geometry.coordinates[0]);\n        setTechLat(tech.geometry.coordinates[1]);\n        setTechTitle(tech.properties.name);\n        setTechRot(tech.properties.bearing);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    };\n\n  useEffect(() => {\n    fetchTechnicianLocation();\n\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [techLng, techLat],\n      zoom: 9\n    });\n\n    var marker1 = new mapboxgl.Marker({color: techColor})\n      .setLngLat([techLng, techLat])\n      .setPopup(new mapboxgl.Popup().setText(techTitle))\n      .setRotation(techRot)\n      .addTo(map);\n\n    return () => map.remove();\n  });\n\n  return (\n    <div>\n      <div className=\"map-container\" ref={mapContainer} />\n    </div>\n  );\n};\n\nReactDOM.render(<Map />, document.getElementById('app'));\n"]},"metadata":{},"sourceType":"module"}